load world.maude .

fmod TERMINAL is
   protecting RAT .
   protecting BANK .
   sorts State Terminal TerminalMemory Price .
   subsort Price < Rat .

   var A : AccountNumber .
   var C : Card .
   var C2 : Card .

   --- State ops
   ops idle waitingForCard waitingForPIN confirmation : -> State .
   ops cardBlocked cardExpired accountEmpty : -> State .
   var S : State .
   var S2 : State .

   --- Price ops
   op nilPrice : -> Price .
   var P : Price .

   --- Terminal ops
   op terminal : State TerminalMemory Card -> Terminal .
   op terminalMemory : Price AccountNumber Card -> TerminalMemory .
   var T : Terminal .
   var TM : TerminalMemory .

   op changeState : State Terminal -> Terminal .
   eq changeState(S, terminal(S2, TM, C)) = terminal(S, TM, C) .

   op savePrice : Price Terminal -> Terminal .
   eq savePrice(P, terminal(S, terminalMemory(nilPrice, A, C), C2)) =
      terminal(S, terminalMemory(P, A, C), C2) .

   op resetPrice : Terminal -> Terminal .
   eq resetPrice(terminal(S, terminalMemory(P, A, C), C2)) =
      terminal(S, terminalMemory(nilPrice, A, C), C2) .

   op getPrice : Terminal -> Price .
   eq getPrice(terminal(S, terminalMemory(P, A, C), C2)) = P .

   op saveCard : Card Terminal -> Terminal .
   eq saveCard(C, terminal(S, terminalMemory(P, A, nilCard), C2)) =
      terminal(S, terminalMemory(P, A, C), C2) .

   op resetCard : Terminal -> Terminal .
   eq resetCard(terminal(S, terminalMemory(P, A, C), C2)) =
      terminal(S, terminalMemory(P, A, nilCard), C2) .

   --- idle -> waitingForCard
   op requestPayment : Terminal Price -> Terminal .
   eq requestPayment(terminal(idle, TM, nilCard), P) =
      savePrice(P, terminal(waitingForCard, TM, nilCard)) .

   --- waitingForCard -> waitingForPIN or confirmation
   ops attachCard swipeCard insertCard removeCard : Card Terminal -> Terminal .

   eq attachCard(C, terminal(waitingForCard, TM, nilCard)) =
      if getPrice(terminal(waitingForCard, TM, nilCard)) < 500
      then requestTransaction(saveCard(C, terminal(confirmation, TM, nilCard)), nilPIN)
      else saveCard(C, terminal(waitingForPIN, TM, nilCard))
      fi .

   eq swipeCard(C, terminal(waitingForCard, TM, nilCard)) =
      saveCard(C, terminal(waitingForPIN, TM, nilCard)).

   eq insertCard(C, terminal(waitingForCard, TM, nilCard)) =
      saveCard(C, terminal(waitingForPIN, TM, C)).

   eq removeCard(C, terminal(S, TM, C)) = terminal(S, TM, nilCard) .

   --- waitingForPIN -> confirmation
   op requestTransaction : Terminal CardPIN -> Terminal .
   --- TODO: #1 requestTransaction

endfm
